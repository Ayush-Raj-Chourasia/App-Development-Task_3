App
Development
Task Released
Coding Club
IIT Guwahati Coding Week 25

Task 3:Movie Explorer App 400 points

Deliverables:f
} Connect your app to a public movie database API (such as OMDb API, etc)M
} Fetch a list of movies (for example, trending, popular, or based on a search
query)M
} Use proper asynchronous programming (such as async/await in Flutter/React
Native) to fetch data without blocking the UIM
} Implement state management to handle different states: loading, displaying
movies, and handling errors (e.g., show a loading spinner, display movie cards,
show an error message if something goes wrong)M
} Build a Clean and Responsive UI


Additional Features
} Allow users to mark movies as favoritesM
} (Bonus) Store the list of favorite movies locally so that it persists even if the app is
closed and reopene


NOTE- You will be given partial points in each task if you have successfully implemented
some of the deliverables we have asked for.

For example if you were not able to do the copy paste functionality in the task 2 but
were able to implement the other functions then you might get 150 points depending on
how clean other features of your app are. 

Important Guidelines(for all the 3 tasks):f
} Task might seem difficult but its quite doable if you had seen the resourcesM
}  You don't have to complete all parts perfectly, but attempting more and
implementing useful features can increase your chances of scoring higher pointsM
}  Don’t worry if your app isn't fully finished; submitting something is better than
submitting nothingM
}  You are free to use any framework of your choice, such as Flutter, React Native,
or any other you’re comfortable withM
}  Avoid copying code from friends or anywhere as it can lead to plagiarism and
disqualification.



App Development Task


Please make sure you follow the below instructions. Failure to do so will result in
detailed questioning and point reduction.   


  Case 1: Familiar with GitHub:   


 -If you're proficient in committing and pushing code to GitHub:

 -Commit your progress for each subtask separately. Clearly mention the part you've
completed in each commit message. This allows us to track your progress step by
step. You can submit final zip file.  

Submission Instructions:
³  Create a new Git Repository for each task and push it to GitHub, making the
repository public. Any commits made after the deadline won't be considered'
³ Generate a working APK file and upload it to Google Drive. Share the link in the
submission form, ensuring that "Anyone with the link" has view access'
³ You must submit a screen recording of the working app

